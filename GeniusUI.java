//Isa Khan
//Jan 17 2022
//ISC3U
//Genius Game with GUI
package my.khanisageniusgui;
import java.util.Random;
/**
 *
 * @author isakhan
 */
public class GeniusUI extends javax.swing.JFrame {

    private String displayString = "";
    private int roundCounter = 1;
    private String format = "| ";

    /**
     * Creates new form GeniusUI
     */
    public GeniusUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        NumberOfCharLabel = new javax.swing.JLabel();
        NumberInput = new javax.swing.JTextField();
        GuessLabel = new javax.swing.JLabel();
        GuessInput = new javax.swing.JTextField();
        quitButton = new javax.swing.JButton();
        SecretWordDisplay = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultDisplayArea = new javax.swing.JTextArea();
        SWValue = new javax.swing.JLabel();
        ResetButton = new javax.swing.JButton();
        PlayAgainLabel = new javax.swing.JLabel();
        PlayAgainTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Genius Game"));
        jPanel1.setPreferredSize(new java.awt.Dimension(840, 630));

        NumberOfCharLabel.setText("How many letters for the secret word?");

        NumberInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NumberInputActionPerformed(evt);
            }
        });

        GuessLabel.setText("Guess:");

        GuessInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuessInputActionPerformed(evt);
            }
        });

        quitButton.setText("QUIT");
        quitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quitButtonActionPerformed(evt);
            }
        });

        resultDisplayArea.setEditable(false);
        resultDisplayArea.setColumns(20);
        resultDisplayArea.setRows(5);
        jScrollPane1.setViewportView(resultDisplayArea);

        ResetButton.setText("RESET");
        ResetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetButtonActionPerformed(evt);
            }
        });

        PlayAgainLabel.setText("Play Again?");

        PlayAgainTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayAgainTextFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(GuessLabel)
                                    .addComponent(NumberOfCharLabel))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(NumberInput)
                                    .addComponent(GuessInput, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(SecretWordDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(SWValue, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(139, 139, 139)
                        .addComponent(PlayAgainLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(PlayAgainTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NumberOfCharLabel)
                    .addComponent(NumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(GuessLabel)
                        .addComponent(GuessInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(SWValue, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
                        .addComponent(SecretWordDisplay, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PlayAgainLabel)
                    .addComponent(PlayAgainTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ResetButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addComponent(quitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 740, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 5, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NumberInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NumberInputActionPerformed
        // TODO add your handling code here:
        String numIn = NumberInput.getText();       //grabbing user input from first text field
        int numberIn = Integer.parseInt(numIn);     //converting input from string to integer
        char[] letters = SecretWordGenerator(numberIn);     //receiving array of chars being returned from method
        String text = "Secret Word: ";
        SecretWordDisplay.setText(text);        //displaying the secret word once enter is clicked
        SWValue.setText(String.valueOf(letters));
        GuessInput.grabFocus();     //placing focus to the guess text field
        displayString = displayString + "Guess a "+numberIn+ " letter combination of 'r' 'g' or 'b'\n";     //displaying instructions for the user
        String print = "Round: " + roundCounter + "     "+" |  ";   //creating correct amount of spaces for characters
        for (int i = 0; i < numberIn; i++){
            print = print +"  |  ";
        }
        resultDisplayArea.setText(displayString + print); //displaying number of empty spaces
    }//GEN-LAST:event_NumberInputActionPerformed

    private void quitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quitButtonActionPerformed
        System.exit(0); //quit button function
    }//GEN-LAST:event_quitButtonActionPerformed

    private void GuessInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuessInputActionPerformed
        String guess = GuessInput.getText();    // grabbing user input as a string 
        guess = guess.toLowerCase();
        int len = guess.length();
        int correct = checkGuess(guess, SWValue.getText().toCharArray()); //receiving numbr of matching letters after converting string to array and comparing it with secret word
        String newLineText = "Correct: " + correct + "     Incorrect: " + (len - correct);      //Creating Strings for display
        String winText = "YOU WIN!!! It took you " + roundCounter + " rounds to win";
        for (int i = 0; i < len; i++) {     //using for loop to make correct amount of boxes around the characters
            format = format + guess.charAt(i);
            format = format + " | ";
        }

        if (len == correct) {       //display if the amount of mathces is equal to the length of the arrays
            displayString = displayString + "Round: " + roundCounter + "     " + format + "     " + newLineText + "\n\n" + winText      //displaying you win text
                    + "\nPress RESET or type 'y' to play again\nPress QUIT or type any other key to exit the program";  //displaying play again instructions
            resultDisplayArea.setText(displayString);
            GuessInput.setEditable(false);      //Disabling text fields so the game cannot continue 
            NumberInput.setEditable(false);
            PlayAgainTextField.grabFocus();
        } else {        //display if there are still incorrect letters in the guess
            displayString = displayString + "Round: " + roundCounter + "     " + format + "     " + newLineText + "\n";
            resultDisplayArea.setText(displayString);
            roundCounter++;     //adding to round counter
            GuessInput.grabFocus(); //setting focus back to the text field for another guess
        }
        GuessInput.setText("");     //clearing the text field for a new guess
        format = "| ";

    }//GEN-LAST:event_GuessInputActionPerformed

    private void ResetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetButtonActionPerformed
        displayString = "";         //reset button that resets all variables as well as text fields and areas to blank
        roundCounter = 1;
        NumberInput.setText("");
        GuessInput.setText("");
        NumberInput.grabFocus();        //replacing focus to number input field
        SecretWordDisplay.setText("");
        resultDisplayArea.setText("");
        SWValue.setText("");
        format = "| ";
        PlayAgainTextField.setText("");
        GuessInput.setEditable(true);   //re-enabling text fields for the next game
        NumberInput.setEditable(true);
    }//GEN-LAST:event_ResetButtonActionPerformed

    private void PlayAgainTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayAgainTextFieldActionPerformed
        // TODO add your handling code here:
        String playAgain = PlayAgainTextField.getText();
        char in = playAgain.charAt(0);
        if (in !=  'y') { quitButton.doClick();     //having appication close if key other than y is entered in play again text field
        
        } else {
            ResetButton.doClick();  //having a click simulated on the reset button to start a new game for the user
            
        }
    }//GEN-LAST:event_PlayAgainTextFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeeadwadl/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeniusUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeniusUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeniusUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeniusUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeniusUI().setVisible(true);
            }
        });
    }

    public static char[] SecretWordGenerator(int numbersIn) {       //Method that generates the secret word
        Random random = new Random();
        char letters[] = new char[numbersIn];   //initializing array to size of users choice from the number input
        for (int c = 0; c < numbersIn; c++) {   //placing the digits through switch case structure to create array of characters
            int randomLoc = random.nextInt(3);

            switch (randomLoc) {
                case 0:
                    letters[c] = 'r';
                    break;
                case 1:
                    letters[c] = 'g';           //determining which number turns into which letter
                    break;
                case 2:
                    letters[c] = 'b';
                    break;
                default:;
            }

        }
        return letters;     //returning array of chars
    }

    public static int checkGuess(String guess, char[] letters) {        //Method that first converts guess String to char Array then compares with the secret word
        int numberCount = letters.length;
        char guessArray[] = new char[numberCount];  //creating array the size of the user input
        int correct = 0;
        for (int gArray = 0; gArray < numberCount; gArray++) {  //placing the guess string into an array
            guessArray[gArray] = guess.charAt(gArray);
        }
        for (int c = 0; c < numberCount; c++) {
            if (guessArray[c] == letters[c]) {      //comparing two arrays to determine how many characters match 
                correct++;
            }
        }
        return correct;     //returning number of correct letters from the guess 
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField GuessInput;
    private javax.swing.JLabel GuessLabel;
    private javax.swing.JTextField NumberInput;
    private javax.swing.JLabel NumberOfCharLabel;
    private javax.swing.JLabel PlayAgainLabel;
    private javax.swing.JTextField PlayAgainTextField;
    private javax.swing.JButton ResetButton;
    private javax.swing.JLabel SWValue;
    private javax.swing.JLabel SecretWordDisplay;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton quitButton;
    private javax.swing.JTextArea resultDisplayArea;
    // End of variables declaration//GEN-END:variables
}